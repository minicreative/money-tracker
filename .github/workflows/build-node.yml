name: Build NodeJS & Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  KUBE_DEPLOYMENT: "${{ vars.KUBE_DEPLOYMENT }}"
  DOCKER_NAME: "${{ vars.DOCKER_NAME }}"
  DOCKER_TAG: "${{ vars.DOCKER_NAME }}:${{ github.sha }}"

jobs:
  build:
    environment: Production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: Install dependencies
      run: npm install
    - name: Build the app
      run: npm run build:full
    - name: Build the Docker image
      run: docker build . --tag "$DOCKER_TAG"
    - name: Login to Docker
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin
    - name: Make this Docker image tag the latest
      run: docker tag "$DOCKER_TAG" "${{ vars.DOCKER_NAME }}:latest"
    - name: Push Docker image
      run: docker image push --all-tags "$DOCKER_NAME"
  publish:
    environment: Production
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - uses: actions/checkout@v3
    - name: Provide latest hash on remote to environment
      run: echo "LATEST_HASH=$(git rev-parse origin/main)" >> $GITHUB_ENV
    - name: Update Kubernetes deployment if latest hash
      if: ${{ github.sha == env.LATEST_HASH }}
      run: kubectl set image "deployment/$KUBE_DEPLOYMENT" "main=$DOCKER_TAG"
